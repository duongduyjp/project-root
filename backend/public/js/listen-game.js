// Bi·∫øn to√†n c·ª•c
var currentWord = '';
var hasPraise = false;
var praiseMessage = '';

// Kh·ªüi t·∫°o game
function initListenGame(word, praise, message) {
    currentWord = word;
    hasPraise = praise;
    praiseMessage = message;
    
    const speakButton = document.getElementById('speakButton');
    
    // Ph√°t √¢m khi click n√∫t loa
    speakButton.addEventListener('click', function() {
        speak(currentWord);
        
        // Hi·ªáu ·ª©ng khi click
        this.style.transform = 'scale(0.9)';
        setTimeout(() => {
            this.style.transform = 'scale(1)';
        }, 150);
    });

    // Hi·ªáu ·ª©ng ph√°o gi·∫•y v√† g·∫•u b√¥ng khi tr·∫£ l·ªùi ƒë√∫ng
    if (hasPraise) {
        createConfettiAndTeddy();
        
        // ƒê·ªçc c√¢u kh√≠ch l·ªá
        if ('speechSynthesis' in window && praiseMessage) {
            const utterance = new SpeechSynthesisUtterance(praiseMessage);
            utterance.lang = 'vi-VN';
            utterance.rate = 1.5;
            utterance.pitch = 1.2;
            speechSynthesis.speak(utterance);
        }
    }
}

// H√†m ph√°t √¢m s·ª≠ d·ª•ng c√πng c·∫•u h√¨nh nh∆∞ trang t·ª´ v·ª±ng
function speak(text) {
    if ('speechSynthesis' in window) {
        const synth = window.speechSynthesis;
        let voices = synth.getVoices();
        if (!voices.length) {
            synth.onvoiceschanged = () => speak(text);
            synth.getVoices();
            return;
        }
        // ∆Øu ti√™n voice Google (gi·ªëng Google D·ªãch)
        let googleVoice = voices.find(v => v.name.includes('Google') && v.lang.startsWith('en'));
        // N·∫øu kh√¥ng c√≥, ∆∞u ti√™n gi·ªçng n·ªØ ti·∫øng Anh
        let femaleVoice = voices.find(v => v.lang.startsWith('en') && v.name.match(/female|woman|girl|Samantha|Jenny|Linda|Susan|Zira|Emma|Amy|Joanna|Kendra|Kimberly|Salli|Ivy|Mia|Olivia|Tessa|Victoria|Fiona|Karen|Moira|Tessa/i) && v.gender !== 'male');
        if (!femaleVoice) {
            femaleVoice = voices.find(v => v.lang.startsWith('en') && v.gender !== 'male');
        }
        if (!femaleVoice) {
            femaleVoice = voices.find(v => v.lang.startsWith('en'));
        }
        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = 'en-US';
        utterance.rate = 0.85;
        if (googleVoice) {
            utterance.voice = googleVoice;
        } else if (femaleVoice) {
            utterance.voice = femaleVoice;
        }
        synth.speak(utterance);
    } else {
        alert('Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ ph√°t √¢m!');
    }
}

// T·∫°o hi·ªáu ·ª©ng ph√°o gi·∫•y v√† g·∫•u b√¥ng
function createConfettiAndTeddy() {
    const container = document.getElementById('confetti-container');
    const centerX = window.innerWidth / 2;
    const centerY = window.innerHeight / 2;
    
    // T·∫°o ph√°o gi·∫•y
    for (let i = 0; i < 50; i++) {
        setTimeout(() => {
            const confetti = document.createElement('div');
            confetti.className = 'confetti';
            
            // Random lo·∫°i ph√°o gi·∫•y
            const types = ['', 'square', 'triangle'];
            const randomType = types[Math.floor(Math.random() * types.length)];
            if (randomType) confetti.classList.add(randomType);
            
            // Random m√†u s·∫Øc
            const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3', '#a8e6cf', '#ff8b94'];
            confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
            
            // Random v·ªã tr√≠ b·∫Øn ra t·ª´ gi·ªØa
            const angle = (Math.PI * 2 * i) / 50;
            const distance = 50 + Math.random() * 100;
            const startX = centerX + Math.cos(angle) * distance;
            const startY = centerY + Math.sin(angle) * distance;
            
            confetti.style.left = startX + 'px';
            confetti.style.top = startY + 'px';
            
            container.appendChild(confetti);
            
            // X√≥a sau khi animation k·∫øt th√∫c
            setTimeout(() => {
                confetti.remove();
            }, 3000);
        }, i * 50);
    }
    
    // T·∫°o g·∫•u b√¥ng
    const teddyEmojis = ['üß∏', 'üêª', 'üê®', 'üêº'];
    for (let i = 0; i < 15; i++) {
        setTimeout(() => {
            const teddy = document.createElement('div');
            teddy.className = 'teddy-bear';
            teddy.textContent = teddyEmojis[Math.floor(Math.random() * teddyEmojis.length)];
            
            // Random v·ªã tr√≠ b·∫Øn ra t·ª´ gi·ªØa
            const angle = (Math.PI * 2 * i) / 15;
            const distance = 80 + Math.random() * 120;
            const startX = centerX + Math.cos(angle) * distance;
            const startY = centerY + Math.sin(angle) * distance;
            
            teddy.style.left = startX + 'px';
            teddy.style.top = startY + 'px';
            
            container.appendChild(teddy);
            
            // X√≥a sau khi animation k·∫øt th√∫c
            setTimeout(() => {
                teddy.remove();
            }, 3000);
        }, i * 100);
    }
} 